name: Terraform CI/CD

on:
  push:
    branches:
      - main

env:   # глобальные переменные окружения
  AWS_ACCESS_KEY_ID: ${{ secrets.YC_S3_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_S3_SECRET_KEY }}
  AWS_DEFAULT_REGION: ru-central1
  YC_TOKEN: ${{ secrets.YC_TOKEN }}
  YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
  YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
  TERRAFORM_SA_ID: ${{ secrets.TERRAFORM_SA_ID }}

jobs:
  # Установка необходимого ПО и подготовка SA key
  prepare:
    runs-on: ubuntu-latest
    outputs:
      sa_key_path: diploma_project/infra/bootstrap/sa-key.json
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Install YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "${HOME}/yandex-cloud/bin" >> $GITHUB_PATH
      - name: Configure YC CLI
        run: |
          yc config set token ${{ secrets.YC_TOKEN }}
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
      - name: Create Service Account Key
        run: |
          mkdir -p diploma_project/infra/bootstrap
          yc iam key create \
            --service-account-id ${{ secrets.TERRAFORM_SA_ID }} \
            --output diploma_project/infra/bootstrap/sa-key.json
      - name: Upload SA key
        uses: actions/upload-artifact@v3
        with:
          name: sa-key
          path: diploma_project/infra/bootstrap/sa-key.json

  # Установка инфраструктуры (k8s кластер + VPC etc)
  infra:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v4
      - name: Download SA key
        uses: actions/download-artifact@v3
        with:
          name: sa-key
          path: diploma_project/infra/bootstrap
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4
      - name: Terraform Init & Apply
        working-directory: diploma_project/infra
        run: terraform init && terraform apply -var "token=$YC_TOKEN" -var "cloud_id=$YC_CLOUD_ID" -var "folder_id=$YC_FOLDER_ID" -var "terraform_sa_id=$TERRAFORM_SA_ID" -auto-approve

  # Настройка ingress-контроллера + kubeconfig
  bootstrap-cluster:
    runs-on: ubuntu-latest
    needs: infra
    steps:
      - uses: actions/checkout@v4
      - name: Download SA key
        uses: actions/download-artifact@v3
        with:
          name: sa-key
          path: diploma_project/infra/bootstrap
      - name: Add YC CLI to PATH
        run: echo "${HOME}/yandex-cloud/bin" >> $GITHUB_PATH
      - name: Configure YC CLI
        run: |
          yc config set token ${{ secrets.YC_TOKEN }}
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
      - name: Get kubeconfig
        run: yc managed-kubernetes cluster get-credentials my-k8s-cluster --external --force
      - name: Install ingress-nginx
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          kubectl create namespace ingress-nginx || true
          helm install ingress-nginx ingress-nginx/ingress-nginx -n ingress-nginx \
            --set controller.replicaCount=2 \
            --set controller.nodeSelector."kubernetes\.io/os"=linux \
            --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux

    #  Установка подов ingress контроллера + конфига для k8s
#  deploy:
#    name: Deploy Apps
#    runs-on: ubuntu-latest
#    needs: bootstrap-cluster
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v3
#      - name: Terraform Init
#        working-directory: diploma_project/terraform-deploy
#        run: terraform init
#      - name: Terraform Apply
#        working-directory: diploma_project/terraform-deploy
#        run: terraform apply -auto-approve